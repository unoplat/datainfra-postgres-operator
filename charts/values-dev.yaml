image:
  registry: registry.opensource.zalan.do
  repository: ghcr.io/spartansdataplatform/datainfra-postgres-operator
  tag: v1.8.2
  pullPolicy: IfNotPresent
podAnnotations: {}
podLabels: {}
configTarget: OperatorConfigurationCRD
enableJsonLogging: false
configGeneral:
  enable_crd_registration: true
  crd_categories:
    - all
  enable_lazy_spilo_upgrade: false
  enable_pgversion_env_var: true
  enable_shm_volume: true
  enable_spilo_wal_path_compat: false
  etcd_host: ''
  docker_image: registry.opensource.zalan.do/acid/spilo-14:2.1-p6
  min_instances: -1
  max_instances: -1
  repair_period: 5m
  resync_period: 30m
  workers: 8
configUsers:
  enable_password_rotation: false
  password_rotation_interval: 90
  password_rotation_user_retention: 180
  replication_username: standby
  super_username: postgres
configMajorVersionUpgrade:
  major_version_upgrade_mode: 'off'
  minimal_major_version: '9.6'
  target_major_version: '14'
configKubernetes:
  cluster_domain: cluster.local
  cluster_labels:
    application: spilo
  cluster_name_label: cluster-name
  enable_cross_namespace_secret: false
  enable_init_containers: true
  enable_pod_antiaffinity: false
  enable_pod_disruption_budget: true
  enable_sidecars: true
  pdb_name_format: postgres-{cluster}-pdb
  pod_antiaffinity_topology_key: kubernetes.io/hostname
  pod_management_policy: ordered_ready
  pod_role_label: spilo-role
  pod_terminate_grace_period: 5m
  secret_name_template: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
  spilo_privileged: false
  spilo_allow_privilege_escalation: true
  storage_resize_mode: pvc
  watched_namespace: '*'
configPostgresPodResources:
  default_cpu_limit: '1'
  default_cpu_request: 100m
  default_memory_limit: 500Mi
  default_memory_request: 100Mi
  min_cpu_limit: 250m
  min_memory_limit: 250Mi
configTimeouts:
  patroni_api_check_interval: 1s
  patroni_api_check_timeout: 5s
  pod_deletion_wait_timeout: 10m
  pod_label_wait_timeout: 10m
  ready_wait_interval: 3s
  ready_wait_timeout: 30s
  resource_check_interval: 3s
  resource_check_timeout: 10m
configLoadBalancer:
  db_hosted_zone: db.example.com
  enable_master_load_balancer: false
  enable_master_pooler_load_balancer: false
  enable_replica_load_balancer: false
  enable_replica_pooler_load_balancer: false
  external_traffic_policy: Cluster
  master_dns_name_format: '{cluster}.{team}.{hostedzone}'
  replica_dns_name_format: '{cluster}-repl.{team}.{hostedzone}'
configDebug:
  debug_logging: true
  enable_database_access: true
configLoggingRestApi:
  api_port: 8080
  cluster_history_entries: 1000
  ring_log_lines: 100
configAwsOrGcp:
  aws_region: eu-central-1
  enable_ebs_gp3_migration: false
configLogicalBackup:
  logical_backup_docker_image: registry.opensource.zalan.do/acid/logical-backup:v1.8.0
  logical_backup_job_prefix: logical-backup-
  logical_backup_provider: s3
  logical_backup_s3_access_key_id: ''
  logical_backup_s3_bucket: my-bucket-url
  logical_backup_s3_region: ''
  logical_backup_s3_endpoint: ''
  logical_backup_s3_secret_access_key: ''
  logical_backup_s3_sse: AES256
  logical_backup_s3_retention_time: ''
  logical_backup_schedule: 30 00 * * *
configTeamsApi:
  enable_admin_role_for_users: true
  enable_postgres_team_crd: false
  enable_postgres_team_crd_superusers: false
  enable_team_member_deprecation: false
  enable_team_superuser: false
  enable_teams_api: false
  pam_role_name: zalandos
  postgres_superuser_teams:
    - postgres_superusers
  protected_role_names:
    - admin
    - cron_admin
  role_deletion_suffix: _deleted
  team_admin_role: admin
  team_api_role_configuration:
    log_statement: all
configConnectionPooler:
  connection_pooler_schema: pooler
  connection_pooler_user: pooler
  connection_pooler_image: registry.opensource.zalan.do/acid/pgbouncer:master-22
  connection_pooler_max_db_connections: 60
  connection_pooler_mode: transaction
  connection_pooler_number_of_instances: 2
  connection_pooler_default_cpu_request: 500m
  connection_pooler_default_memory_request: 100Mi
  connection_pooler_default_cpu_limit: '1'
  connection_pooler_default_memory_limit: 100Mi
enableStreams: false
rbac:
  create: true
  createAggregateClusterRoles: false
serviceAccount:
  create: true
  name: null
podServiceAccount:
  name: postgres-pod
priorityClassName: ''
podPriorityClassName: ''
resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 100m
    memory: 250Mi
securityContext:
  runAsUser: 1000
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
affinity: {}
nodeSelector: {}
tolerations: []
controllerID:
  create: false
  name: null
